{"version":3,"sources":["animation.js","calculations.js","combat.js","main.js","sound.js","userInterface.js","util.js"],"names":["Sprite","options","width","height","frames","duration","context","getAngle","p1","p2","Math","atan2","y","x","PI","mod","value","lineDistance","point1","point2","xs","ys","sqrt","pointFromAngle","point","angle","distance","radians","cos","sin","getRandomArbitary","min","max","random","getRandomInt","floor","chance","percentage","isFacing","ship1","ship2","result","diff","center","abs","isIntersecting1","Point1","Point2","Point3","Point4","denominator","numerator1","numerator2","r","s","line_intersects","p0_x","p0_y","p1_x","p1_y","p2_x","p2_y","p3_x","p3_y","s1_x","s1_y","s2_x","s2_y","t","CCW","p3","isIntersecting","p4","lineIntersectsShip","startpoint","endpoint","ship","explode","scale","explosion","document","createElement","className","$","body","append","offsetWidth","offsetHeight","style","top","left","transform","explosions","push","explosionSound","play","Projectile","that","this","owner","target","type","health","damage","ctx","speedX","speedY","acceleration","turnSpeed","image","Image","src","onload","render","game","requestAnimationFrame","canvas","clearRect","drawImage","bg","e","length","j","enemies","isColliding","Firefly","p","projectiles","update","i","ui","showHealth","b1","b2","Ship","status","lastStatusChange","Infinity","cooldownTime","inaccuracy","cooldown","window","innerWidth","innerHeight","fireImg","takingFireImg","Object","extend","maxHealth","imageSrc","createPlayer","player","destroy","turn","mousePosition","directions","forward","keyDown","KEYS","UP_ARROW","KEY_W","back","DOWN_ARROW","KEY_S","LEFT_ARROW","KEY_A","right","RIGHT_ARROW","KEY_D","move","SPACE","offset","t1","t2","fireMissile","laserSound","mouseDown","BUTTONS","LEFT","fireGun","draw","alert","createEnemy","enemy","speed","facing","firing","filter","el","SoundPool","filename","volume","maxSize","pool","currSound","sound","Audio","setVolume","mute","state","muted","currentTime","ended","Playlist","playlist","currentTrack","pause","next","isPlaying","paused","addEventListener","newGame","location","reload","continueGame","hide","pauseGame","show","checkMouseButtons","mouseDownCount","console","log","disableKeys","keys","event","indexOf","which","preventDefault","warn","message","prototype","$target","hasClass","propertyName","remove","drawRotated","degrees","angleInRadians","translate","rotate","updateCenter","targetAngle","turnDegrees","Array","backgroundAudio","getElementById","getContext","onresize","setTimeout","takingFire","intersecting","distance2","distance1","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","launchPoint","missileOptions","deleteMeAudio","togglePlayers","players","musicPlayer","speechPlayer","effectsPlayer","settings","id","volumeDown","round","volumeUp","nextTrack","entity","fillStyle","fillRect","key","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","INSERT","DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_B","KEY_C","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_T","KEY_U","KEY_V","KEY_X","KEY_Y","KEY_Z","LEFT_META","RIGHT_META","SELECT","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","MULTIPLY","ADD","SUBTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","FORWARD_SLASH","GRAVE_ACCENT","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","SINGLE_QUOTE","MIDDLE","RIGHT","clientX","clientY","button","elem","class","text","appendTo","delay","fadeOut","onerror","errorMsg","url","lineNumber","column","errObj","d","k","hasOwnProperty","v"],"mappings":"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","file":"main.min.js","sourcesContent":["\"use strict\";\r\nfunction Sprite(options) {\r\n    //var path = options.path;\r\n    var width = options.width;\r\n    var height = options.height;\r\n    var frames = options.frames;\r\n    var duration = options.duration;\r\n    var context = options.context;\r\n\r\n    var frame = 0;\r\n}\r\n\r\nSprite.prototype = {\r\n    draw: function draw(point) {\r\n    }\r\n};","\"use strict\";\r\n// Find angle between two points.\r\nfunction getAngle(p1, p2) {\r\n    return Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\r\n}\r\n\r\n// Euclidean modulo.\r\nfunction mod(x, value) {\r\n    return x >= 0 ? x % value : value + x % value;\r\n}\r\n\r\n// Distance between two points.\r\nfunction lineDistance(point1, point2) {\r\n    var xs = 0;\r\n    var ys = 0;\r\n\r\n    xs = point2.x - point1.x;\r\n    xs = xs * xs;\r\n\r\n    ys = point2.y - point1.y;\r\n    ys = ys * ys;\r\n\r\n    return Math.sqrt(xs + ys);\r\n}\r\n\r\n// Point from distance and angle\r\nfunction pointFromAngle(point, angle, distance) {\r\n    var radians = angle * (Math.PI / 180);\r\n\r\n    var x = Math.cos(radians) * distance;\r\n    var y = Math.sin(radians) * distance;\r\n\r\n    x = point.x + x;\r\n    y = point.y + y;\r\n\r\n    return { x: x, y: y };\r\n}\r\n\r\n//function Point(x, y) {\r\n//    return { x: x, y: y }\r\n//}\r\n\r\n\r\n// Returns a random number between min and max.\r\nfunction getRandomArbitary(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n// Returns a random integer between min and max.\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n// Return true x percent of the time.\r\nfunction chance(percentage) {\r\n    return Math.random() * 100 < percentage;\r\n}\r\n\r\n// Returns the angle if ship1 is facing ship2.\r\nfunction isFacing(ship1, ship2) {\r\n    var result = false;\r\n    var diff = getAngle(ship1.center, ship2.center) - ship1.angle;\r\n    if (Math.abs(diff) < 100)\r\n        result = diff;\r\n\r\n    return result;\r\n}\r\n\r\n// http://gamedev.stackexchange.com/a/26022/36040\r\nfunction isIntersecting1(Point1, Point2, Point3, Point4) {\r\n    var denominator = ((Point2.x - Point1.x) * (Point4.y - Point3.y)) - ((Point2.y - Point1.y) * (Point4.x - Point3.x));\r\n    var numerator1 = ((Point1.y - Point3.y) * (Point4.x - Point3.x)) - ((Point1.x - Point3.x) * (Point4.y - Point3.y));\r\n    var numerator2 = ((Point1.y - Point3.y) * (Point2.x - Point1.x)) - ((Point1.x - Point3.x) * (Point2.y - Point1.y));\r\n\r\n    // Detect coincident lines (has a problem, read below)\r\n    if (denominator == 0)\r\n        return numerator1 == 0 && numerator2 == 0;\r\n\r\n    var r = numerator1 / denominator;\r\n    var s = numerator2 / denominator;\r\n\r\n    return (r >= 0 && r <= 1) && (s >= 0 && s <= 1);\r\n}\r\n\r\n// Adapted from: http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/1968345#1968345\r\nfunction line_intersects(p0_x, p0_y, p1_x, p1_y, p2_x, p2_y, p3_x, p3_y) {\r\n    var s1_x, s1_y, s2_x, s2_y;\r\n    s1_x = p1_x - p0_x;\r\n    s1_y = p1_y - p0_y;\r\n    s2_x = p3_x - p2_x;\r\n    s2_y = p3_y - p2_y;\r\n\r\n    var s, t;\r\n    s = (-s1_y * (p0_x - p2_x) + s1_x * (p0_y - p2_y)) / (-s2_x * s1_y + s1_x * s2_y);\r\n    t = (s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\r\n\r\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\r\n        // Collision detected\r\n        return 1;\r\n    }\r\n\r\n    return 0; // No collision\r\n}\r\n\r\n// http://stackoverflow.com/a/16725715/2407212\r\nfunction CCW(p1, p2, p3) {\r\n    return (p3.y - p1.y) * (p2.x - p1.x) > (p2.y - p1.y) * (p3.x - p1.x);\r\n}\r\n\r\nfunction isIntersecting(p1, p2, p3, p4) {\r\n    return (CCW(p1, p3, p4) != CCW(p2, p3, p4)) && (CCW(p1, p2, p3) != CCW(p1, p2, p4));\r\n}\r\n\r\nfunction lineIntersectsShip(startpoint, endpoint, ship) {\r\n    // Corners.\r\n    var p1 = { x: ship.x, y: ship.y };\r\n    var p2 = { x: ship.x + ship.width, y: ship.y };\r\n    var p3 = { x: ship.x + ship.width, y: ship.y + ship.height };\r\n    var p4 = { x: ship.x, y: ship.y + ship.height };\r\n\r\n    // Check if bullet line intersects the ship outline.\r\n    return isIntersecting(startpoint, endpoint, p1, p2) ||\r\n        isIntersecting(startpoint, endpoint, p2, p3) ||\r\n        isIntersecting(startpoint, endpoint, p3, p4) ||\r\n        isIntersecting(startpoint, endpoint, p4, p1);\r\n}","\"use strict\";\r\nfunction explode(x, y, scale) {\r\n    var explosion = document.createElement(\"div\");\r\n    var width;\r\n    var height;\r\n\r\n    explosion.className = \"explosion explosion\" + getRandomInt(1, 5);\r\n\r\n    $(document.body).append(explosion);\r\n\r\n    width = explosion.offsetWidth;\r\n    height = explosion.offsetHeight;\r\n\r\n    explosion.style.top = y - height / 2 + \"px\";\r\n    explosion.style.left = x - width / 2 + \"px\";\r\n    if (scale)\r\n        explosion.style.transform = \"scale(\" + scale + \")\";\r\n    //explosion.style.transform = \"rotate(\" + getRandomInt(0, 359) + \"deg) scale(\" + (scale || getRandomArbitary(0.8, 1.2)) + \")\";\r\n\r\n    // For collision detection.\r\n    explosion.x = x;\r\n    explosion.y = y;\r\n    explosion.width = width / 2;\r\n    explosion.height = height / 2;\r\n    explosions.push(explosion);\r\n\r\n    explosionSound.play();\r\n}\r\n\r\n// Bind end to explosion.\r\ndocument.addEventListener('transitionend',\r\nfunction (event) {\r\n    var $target = $(event.target);\r\n    // Missile.\r\n    if ($target.hasClass(\"missile\") && event.propertyName === 'top') { // Keep from firing for each attr.\r\n        //console.log(\"Missile: \" + event.type + \" \" + event.timeStamp);\r\n        //alert(\"KILL KILL!\");\r\n        explode(\r\n          $target.offset().left - $target.width() / 2,\r\n          $target.offset().top - $target.height() / 2\r\n        );\r\n        $target.remove();\r\n    }\r\n});\r\n\r\n// TODO: add webkit prefix (multi listener: http://stackoverflow.com/a/8797106/2407212)\r\ndocument.addEventListener('animationend',\r\nfunction (event) {\r\n    var $target = $(event.target);\r\n    // Explosion.\r\n    if ($target.hasClass(\"explosion\")) {\r\n        //console.log(\"Explosion: type'\" + event.target.className + \"' \" + event.type + \" \" + event.timeStamp);\r\n        $target.remove();\r\n        //alert(\"Boom!\");\r\n    }\r\n});\r\n\r\n\r\n/*\r\nvar paint = [];\r\nfunction paintMadness() {\r\n    // PAINT MADNESS.\r\n    // Record.\r\n    if (keyDown[KEYS.KEY_Q]) {\r\n        paint.push(mousePosition);\r\n    }\r\n    // Shoot path.\r\n    if (keyDown[KEYS.KEY_E]) {\r\n        if (paint.length) {\r\n            fireMissile(player.center, paint[0]);\r\n            fireMissile(player.center, paint[~~(paint.length / 5)]);\r\n            fireMissile(player.center, paint[~~(paint.length / 5 * 2)]);\r\n            fireMissile(player.center, paint[~~(paint.length / 5 * 3)]);\r\n            fireMissile(player.center, paint[~~(paint.length / 5 * 4)]);\r\n            laserSound.play();\r\n            //paint = paint.splice(1);\r\n            paint.push(paint.shift());\r\n        }\r\n    }\r\n    // Full Kamikaze.\r\n    if (keyDown[KEYS.KEY_F]) {\r\n        for (var i = 0; i < paint.length; i++) {\r\n            fireMissile(player.center, paint[i]);\r\n            laserSound.play();\r\n        }\r\n    }\r\n    // Clear last. (Doesn't work well with Array.shift)\r\n    if (keyDown[KEYS.KEY_V]) {\r\n        paint.pop();\r\n    }\r\n    // Clear all.\r\n    if (keyDown[KEYS.KEY_R]) {\r\n        paint = [];\r\n    }\r\n}\r\n*/\r\n\r\n// TODO use inheritance to share methods with other entities.\r\nfunction Projectile(options) {\r\n    var that = this;\r\n\r\n    this.owner = options.owner;\r\n    this.target = options.target;\r\n    this.type = options.type;\r\n\r\n    this.health = options.health || 1;\r\n    this.damage = options.damage || 10;\r\n    this.ctx = options.ctx;\r\n    //this.status = {};\r\n    //this.lastStatusChange = Infinity;\r\n\r\n    this.speedX = options.speedX || 0;\r\n    this.speedY = options.speedY || 0;\r\n\r\n    this.acceleration = options.acceleration || 0.3;\r\n    this.turnSpeed = options.turnSpeed || 0;\r\n\r\n    //this.inaccuracy = 100;\r\n\r\n    this.angle = options.angle;\r\n\r\n    // Temp, see img.onload!\r\n    this.width = options.width || 6;\r\n    this.height = options.height || 12;\r\n    this.x = options.x - this.width / 2;\r\n    this.y = options.y - this.height / 2;\r\n    this.center = {\r\n        x: this.x + this.width / 2,\r\n        y: this.y + this.height / 2\r\n    };\r\n\r\n    // Set projectile image.\r\n    this.image = new Image();\r\n    this.image.src = \"images/objects/bolt1.png\";\r\n\r\n    // TODO this needs to be smarter, better measure once per image.\r\n    // Measure it.\r\n    this.image.onload = function () {\r\n        that.width = that.image.width;\r\n        that.height = that.image.height;\r\n\r\n        that.x = options.x - that.width / 2;\r\n        that.y = options.y - that.height / 2;\r\n\r\n        that.center = {\r\n            x: that.x + that.width / 2,\r\n            y: that.y + that.height / 2\r\n        };\r\n    };\r\n}\r\n\r\nProjectile.prototype = {\r\n    draw: function draw() {\r\n        this.drawRotated();\r\n    },\r\n\r\n    drawRotated: function drawRotated(image) {\r\n        image || (image = this.image);\r\n        var x = this.center.x;\r\n        var y = this.center.y;\r\n        var context = this.ctx;\r\n        var degrees = this.angle + 90;\r\n        var angleInRadians = degrees * Math.PI / 180;\r\n\r\n        context.translate(x, y);\r\n        context.rotate(angleInRadians);\r\n        context.drawImage(image, -this.width / 2, -this.height / 2);\r\n        context.rotate(-angleInRadians);\r\n        context.translate(-x, -y);\r\n    },\r\n\r\n    updateCenter: function updateCenter() {\r\n        this.center.x = this.x + this.width / 2;\r\n        this.center.y = this.y + this.height / 2;\r\n    },\r\n\r\n    turn: function turn(point) {\r\n        // Find projectile angle.\r\n        var targetAngle = getAngle(this.center, point);\r\n        var turnDegrees = mod(targetAngle - this.angle + 180, 360) - 180;\r\n\r\n        if (turnDegrees > -4 && turnDegrees < 4) {\r\n            this.angle = targetAngle;\r\n        }\r\n        else if (turnDegrees < 0) {\r\n            this.angle -= this.turnSpeed;\r\n        }\r\n        else {\r\n            this.angle += this.turnSpeed;\r\n        }\r\n    },\r\n\r\n    move: function move(directions) {\r\n        // Angle 0 is X-axis, direction is in radians.\r\n        var angle = this.angle * (Math.PI / 180);\r\n\r\n        var forward = directions.forward ? 1 : 0;\r\n        var back = directions.back ? -0.3 : 0;\r\n        var left = directions.left ? 0.4 : 0;\r\n        var right = directions.right ? -0.4 : 0;\r\n\r\n        // Forward and backward.\r\n        this.speedX = this.speedX + (forward + back) * this.acceleration * Math.cos(angle);\r\n        this.speedY = this.speedY + (forward + back) * this.acceleration * Math.sin(angle);\r\n\r\n        // Left and right.\r\n        this.speedX = this.speedX + (left + right) * this.acceleration * Math.cos(angle - Math.PI / 2);\r\n        this.speedY = this.speedY + (left + right) * this.acceleration * Math.sin(angle - Math.PI / 2);\r\n\r\n        // Friction.\r\n        this.speedX *= 0.985;\r\n        this.speedY *= 0.985;\r\n\r\n        this.x = this.x + this.speedX;\r\n        this.y = this.y + this.speedY;\r\n\r\n        this.updateCenter();\r\n    },\r\n\r\n    update: function () {\r\n        if (this.health <= 0)\r\n            return this.destroy();\r\n        else if (this.x < 0 || this.y < 0 || this.x > this.ctx.canvas.width || this.y > this.ctx.canvas.height)\r\n            return this.remove();\r\n\r\n        //this.turn(this.target);\r\n\r\n        // Direction modifiers.\r\n        var directions = {\r\n            forward: true\r\n        };\r\n\r\n        this.move(directions);\r\n\r\n        this.draw();\r\n    },\r\n\r\n    destroy: function () {\r\n        explode(this.center.x, this.center.y);\r\n        projectiles = projectiles.filter(function notMe(el) { return el !== this; }, this);\r\n    },\r\n\r\n    remove: function () {\r\n        projectiles = projectiles.filter(function notMe(el) { return el !== this; }, this);\r\n    }\r\n};\r\n","\"use strict\";\r\n// Globals.\r\nvar Firefly;\r\nvar enemies = new Array(8);\r\nvar projectiles = [];\r\nvar explosions = [];\r\nvar game = true;\r\nvar laserSound = new SoundPool(\"sound/effects/laser.wav\", 0.05, 300);\r\nvar explosionSound = new SoundPool(\"sound/effects/explosion4.wav\", 0.1, 300);\r\nvar playlist = [\r\n    \"sound/music/ambientmain_0.ogg\",\r\n    \"sound/music/dark_fallout.ogg\",\r\n    \"sound/music/last_stand_in_space.ogg\",\r\n    \"sound/music/dust.mp3\"\r\n];\r\nvar backgroundAudio = new Playlist(playlist, 0.2, true);\r\nvar canvas;\r\n\r\n// Initialize game.\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    //backgroundAudio.play();\r\n\r\n    //disableKeys([KEYS.F1, KEYS.F5]);\r\n\r\n    canvas = document.getElementById(\"canvas\");\r\n    canvas.ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    window.onresize = function () {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n    };\r\n\r\n    canvas.bg = new Image();\r\n    canvas.bg.src = \"images/bg.jpg\";\r\n\r\n    Firefly = createPlayer(canvas);\r\n\r\n    for (var i = 0; i < enemies.length; i++) {\r\n        enemies[i] = createEnemy(canvas);\r\n        //enemies[i].init();\r\n    }\r\n\r\n    // Delay start till ship ready.\r\n    window.setTimeout(render, 50);\r\n});\r\n\r\nfunction render() {\r\n    if (!game) return;\r\n    requestAnimationFrame(render);\r\n\r\n    canvas.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    canvas.ctx.drawImage(canvas.bg, 0, 0);\r\n\r\n    // Check ships vs explosions.\r\n    for (var e = 0; e < explosions.length; e++) {\r\n        for (var j = 0; j < enemies.length; j++) {\r\n            if (isColliding(explosions[e], enemies[j]))\r\n                enemies[j].health--;\r\n        }\r\n        // Check player.\r\n        if (isColliding(explosions[e], Firefly))\r\n            Firefly.health--;\r\n    }\r\n    // Reset explosions.\r\n    explosions = [];\r\n\r\n    // Check ships vs projectiles.\r\n    for (var p = 0; p < projectiles.length; p++) {\r\n        for (var j = 0; j < enemies.length; j++) {\r\n            // Check for friendly fire as well.\r\n            if (projectiles[p].owner === Firefly && isColliding(projectiles[p], enemies[j])) {\r\n                enemies[j].health -= projectiles[p].damage;\r\n                projectiles[p].health = 0;\r\n            }\r\n        }\r\n        // Check player.\r\n        if (projectiles[p].owner !== Firefly && isColliding(projectiles[p], Firefly)) {\r\n            Firefly.health -= projectiles[p].damage;\r\n            projectiles[p].health = 0;\r\n        }\r\n    }\r\n\r\n    Firefly.update();\r\n\r\n    for (var i = 0; i < projectiles.length; i++) {\r\n        projectiles[i].update();\r\n    }\r\n\r\n    for (var i = 0; i < enemies.length; i++) {\r\n        enemies[i].update();\r\n    }\r\n\r\n    // HP bar.\r\n    ui.showHealth(canvas.ctx, Firefly);\r\n}\r\n\r\n// **isColliding()** returns true if two passed bodies are colliding.\r\n// The approach is to test for five situations.  If any are true,\r\n// the bodies are definitely not colliding. If none of them\r\n// are true, the bodies are colliding.\r\n// 1. b1 is the same body as b2.\r\n// 2. Right of `b1` is to the left of the left of `b2`.\r\n// 3. Bottom of `b1` is above the top of `b2`.\r\n// 4. Left of `b1` is to the right of the right of `b2`.\r\n// 5. Top of `b1` is below the bottom of `b2`.\r\nfunction isColliding(b1, b2) {\r\n    return !(\r\n        b1 === b2 ||\r\n        b1.x + b1.width < b2.x - b2.width ||\r\n        b1.y + b1.height < b2.y - b2.height ||\r\n        b1.x - b1.width > b2.x + b2.width ||\r\n        b1.y - b1.height > b2.y + b2.height\r\n    );\r\n}\r\n\r\n// Ship constructor.\r\nfunction Ship(canvas, options) {\r\n    var that = this;\r\n\r\n    this.health = 50;\r\n\r\n    //this.damage = 10;\r\n    this.ctx = canvas.ctx;\r\n    this.status = {};\r\n    this.lastStatusChange = Infinity;\r\n\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n\r\n    this.acceleration = 0.3;\r\n    this.turnSpeed = 3;\r\n    this.cooldownTime = 20;\r\n    this.inaccuracy = 100;\r\n\r\n    // Can fire.\r\n    this.cooldown = 0;\r\n    this.x = window.innerWidth / 2 - 40;\r\n    this.y = window.innerHeight / 2 - 40;\r\n    this.angle = 0;\r\n\r\n    this.width = 50;\r\n    this.height = 50;\r\n\r\n    this.fireImg = new Image();\r\n    this.fireImg.src = \"images/objects/GunFlare.png\";\r\n\r\n    this.takingFireImg = new Image();\r\n    this.takingFireImg.src = \"images/objects/BulletImpact.png\";\r\n\r\n    // Customize properties.\r\n    Object.extend(this, options);\r\n\r\n    this.maxHealth = this.health;\r\n\r\n    this.center = {\r\n        x: this.x + this.width / 2,\r\n        y: this.y + this.height / 2\r\n    };\r\n\r\n    // Set ship image.\r\n    this.image = new Image();\r\n    this.image.src = this.imageSrc;\r\n\r\n    // Measure it.\r\n    this.image.onload = function () {\r\n        that.width = that.image.width;\r\n        that.height = that.image.height;\r\n        that.center = {\r\n            x: that.x + that.width / 2,\r\n            y: that.y + that.height / 2\r\n        };\r\n    };\r\n}\r\n\r\nShip.prototype = {\r\n    draw: function draw() {\r\n        this.drawRotated();\r\n\r\n        if (this.status.firing)\r\n            this.drawRotated(this.fireImg);\r\n\r\n        if (this.status.takingFire)\r\n            this.drawRotated(this.takingFireImg);\r\n    },\r\n\r\n    drawRotated: function drawRotated(image) {\r\n        image || (image = this.image);\r\n        var x = this.center.x;\r\n        var y = this.center.y;\r\n        var context = this.ctx;\r\n        var degrees = this.angle + 90;\r\n        var angleInRadians = degrees * Math.PI / 180;\r\n\r\n        context.translate(x, y);\r\n        context.rotate(angleInRadians);\r\n        context.drawImage(image, -this.width / 2, -this.height / 2);\r\n        context.rotate(-angleInRadians);\r\n        context.translate(-x, -y);\r\n    },\r\n\r\n    // Set center.\r\n    updateCenter: function updateCenter() {\r\n        this.center.x = this.x + this.width / 2;\r\n        this.center.y = this.y + this.height / 2;\r\n    },\r\n\r\n    // Set the ships angle.\r\n    turn: function turn(point) {\r\n        // Find ship angle.\r\n        var targetAngle = getAngle(this.center, point);\r\n        var turnDegrees = mod(targetAngle - this.angle + 180, 360) - 180;\r\n\r\n        if (turnDegrees > -4 && turnDegrees < 4) {\r\n            this.angle = targetAngle;\r\n        }\r\n        else if (turnDegrees < 0) {\r\n            this.angle -= this.turnSpeed;\r\n        }\r\n        else {\r\n            this.angle += this.turnSpeed;\r\n        }\r\n    },\r\n\r\n    // TODO Only works for player.\r\n    fireGun: function fireGun() {\r\n        if (this.cooldown > 0)\r\n            return;\r\n\r\n        this.status.firing = true;\r\n\r\n        // Long gun range.\r\n        var endpoint = pointFromAngle(this.center, this.angle, 10000);\r\n        var intersecting = [];\r\n\r\n        for (var i = 0; i < enemies.length; i++) {\r\n            if (lineIntersectsShip(this.center, endpoint, enemies[i]))\r\n                intersecting.push(enemies[i]);\r\n        }\r\n\r\n        // todo: only is cleared when firing! Status should be maintained per ship update.\r\n        //enemies[i].status.takingFire = false;\r\n\r\n        var target;\r\n        var distance1 = Infinity;\r\n        var distance2;\r\n\r\n        // Only hit closest target.\r\n        for (var i = 0; i < intersecting.length; i++) {\r\n            distance2 = lineDistance(this.center, intersecting[i].center);\r\n            if (distance2 < distance1) {\r\n                distance1 = distance2;\r\n                target = intersecting[i];\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.status.takingFire = true;\r\n            target.lastStatusChange = 0;\r\n            target.health--;\r\n            endpoint = pointFromAngle(this.center, this.angle, distance1);\r\n        }\r\n\r\n        // Draw double laser.\r\n        var offset = 12;\r\n        var p1 = pointFromAngle(this.center, this.angle - 90, offset);\r\n        var p2 = pointFromAngle(this.center, this.angle - 90, -offset);\r\n        var t1 = pointFromAngle(endpoint, this.angle - 90, offset);\r\n        var t2 = pointFromAngle(endpoint, this.angle - 90, -offset);\r\n\r\n        var context = this.ctx;\r\n        context.beginPath();\r\n\r\n        context.moveTo(p1.x, p1.y);\r\n        context.lineTo(t1.x, t1.y);\r\n        context.moveTo(p2.x, p2.y);\r\n        context.lineTo(t2.x, t2.y);\r\n\r\n        context.lineWidth = 0.8;\r\n        //context.setLineDash([1]);\r\n        context.strokeStyle = 'orange';\r\n        context.stroke();\r\n\r\n        this.cooldown = this.cooldownTime;\r\n        laserSound.play();\r\n    },\r\n\r\n    fireMissile: function fireMissile(launchPoint, target) {\r\n        var missileOptions = {\r\n            owner: this,\r\n            // TODO: target doesn't have use for dumbfire\r\n            //target: target,\r\n            x: launchPoint.x,\r\n            y: launchPoint.y,\r\n            type: 'dumbfire',\r\n            ctx: this.ctx,\r\n            angle: this.angle,\r\n            speedX: this.speedX,\r\n            speedY: this.speedY\r\n        };\r\n\r\n        projectiles.push(new Projectile(missileOptions));\r\n    },\r\n\r\n    move: function move(directions) {\r\n        // Angle 0 is X-axis, direction is in radians.\r\n        var angle = this.angle * (Math.PI / 180);\r\n\r\n        var forward = directions.forward ? 1 : 0;\r\n        var back = directions.back ? -0.3 : 0;\r\n        var left = directions.left ? 0.4 : 0;\r\n        var right = directions.right ? -0.4 : 0;\r\n\r\n        // Forward and backward.\r\n        this.speedX = this.speedX + (forward + back) * this.acceleration * Math.cos(angle);\r\n        this.speedY = this.speedY + (forward + back) * this.acceleration * Math.sin(angle);\r\n\r\n        // Left and right.\r\n        this.speedX = this.speedX + (left + right) * this.acceleration * Math.cos(angle - Math.PI / 2);\r\n        this.speedY = this.speedY + (left + right) * this.acceleration * Math.sin(angle - Math.PI / 2);\r\n\r\n        // Friction.\r\n        this.speedX *= 0.985;\r\n        this.speedY *= 0.985;\r\n\r\n        this.x = this.x + this.speedX;\r\n        this.y = this.y + this.speedY;\r\n\r\n        this.updateCenter();\r\n    }\r\n};\r\n\r\nfunction createPlayer(canvas) {\r\n    var player = new Ship(canvas, {\r\n        acceleration: 0.8,\r\n        turnSpeed: 6,\r\n        health: 500,\r\n        // Explosions baby!\r\n        cooldownTime: 5,\r\n        imageSrc: \"images/objects/Firefly.png\",\r\n\r\n        update: function () {\r\n            if (this.health <= 0)\r\n                return this.destroy();\r\n\r\n            // Reset stati.\r\n            this.status = {};\r\n\r\n            this.turn(mousePosition);\r\n\r\n            // Find the direction modifiers for player.\r\n            var directions = {\r\n                forward: keyDown[KEYS.UP_ARROW] || keyDown[KEYS.KEY_W],\r\n                back: keyDown[KEYS.DOWN_ARROW] || keyDown[KEYS.KEY_S],\r\n                left: keyDown[KEYS.LEFT_ARROW] || keyDown[KEYS.KEY_A],\r\n                right: keyDown[KEYS.RIGHT_ARROW] || keyDown[KEYS.KEY_D]\r\n            };\r\n\r\n            this.move(directions);\r\n            //if (!movement) this.elem.classList.remove(\"moving\");\r\n\r\n            // Firing.\r\n            if (this.cooldown < 1) {\r\n                if (keyDown[KEYS.SPACE]) {\r\n                    var offset = this.width / 2.4;\r\n                    var p1 = pointFromAngle(this.center, this.angle - 90, offset);\r\n                    var p2 = pointFromAngle(this.center, this.angle - 90, -offset);\r\n\r\n                    var t1 = pointFromAngle(mousePosition, this.angle - 90, offset * 0.5);\r\n                    var t2 = pointFromAngle(mousePosition, this.angle - 90, -offset * 0.5);\r\n\r\n                    this.fireMissile(p1, t1);\r\n                    this.fireMissile(p2, t2);\r\n                    this.cooldown = this.cooldownTime;\r\n                    laserSound.play();\r\n                }\r\n\r\n                // Lasers!\r\n                if (mouseDown[BUTTONS.LEFT]) {\r\n                    this.fireGun();\r\n                }\r\n            }\r\n            else\r\n                this.cooldown--;\r\n\r\n            // Do paint madness.\r\n            //paintMadness();\r\n\r\n            this.draw();\r\n        },\r\n\r\n        destroy: function () {\r\n            // TODO: mad loop with game state...\r\n            explode(this.center.x, this.center.y, 5);\r\n            //this.elem.parentElement.removeChild(this.elem);\r\n\r\n            //game.remove(this);\r\n            //Firefly = \"game over\";\r\n            //game = false;\r\n            //pauseGame();\r\n            alert(\"Game over!\");\r\n            // Make enemies go mad? :)\r\n        }\r\n    });\r\n\r\n    return player;\r\n}\r\n\r\nfunction createEnemy(canvas) {\r\n    var enemy = new Ship(canvas, {\r\n        speed: 5,\r\n        x: chance(50) ? getRandomInt(50, 300) : getRandomInt(canvas.width - 250, canvas.width - 400),\r\n        y: chance(50) ? getRandomInt(50, 300) : getRandomInt(canvas.height - 250, canvas.height - 400),\r\n        imageSrc: \"images/objects/enemy1.png\",\r\n\r\n        //init: function () {\r\n        //    enemy.elem.classList.add(\"enemy\")\r\n        //},\r\n\r\n        update: function () {\r\n            if (this.health <= 0)\r\n                return this.destroy();\r\n\r\n            // Reset status if it was set long ago. TODO: this is fubar, some getter setter maybe?\r\n            if (this.lastStatusChange > 1) {\r\n                this.status = {};\r\n                this.lastStatusChange = 0;\r\n            }\r\n            else\r\n                this.lastStatusChange++;\r\n\r\n            this.turn(Firefly.center);\r\n\r\n            // Move out of player range\r\n            var facing = isFacing(Firefly, this);\r\n            var directions = {};\r\n            if (facing) {\r\n                directions = {\r\n                    forward: true,\r\n                    left: facing > 0,\r\n                    right: facing < 0\r\n                };\r\n            }\r\n                // Back away.\r\n            else if (lineDistance(this.center, Firefly.center) < 300) {\r\n                directions = {\r\n                    back: true\r\n                };\r\n            }\r\n\r\n            this.move(directions);\r\n\r\n            // Fire.\r\n            if (this.cooldown < 1) {\r\n                if (chance(1)) {\r\n                    var target = {\r\n                        x: Firefly.center.x + getRandomInt(-this.inaccuracy, this.inaccuracy),\r\n                        y: Firefly.center.y + getRandomInt(-this.inaccuracy, this.inaccuracy)\r\n                    };\r\n                    this.fireMissile(this.center, target);\r\n                    this.cooldown = this.cooldownTime;\r\n                    // hardly visible, needs to be more frames.\r\n                    this.status.firing = true;\r\n                    laserSound.play();\r\n                }\r\n            }\r\n            else {\r\n                this.status.firing = false;\r\n                this.cooldown--;\r\n            }\r\n\r\n            this.draw();\r\n        },\r\n\r\n        destroy: function () {\r\n            explode(this.center.x, this.center.y, 2.5);\r\n\r\n            //this.elem.parentNode.removeChild(this.elem);\r\n            // Remove this from enemies list.\r\n            //game.remove(this);\r\n            enemies = enemies.filter(function notMe(el) { return el !== this; }, this);\r\n\r\n            // Lame check.\r\n            if (!enemies.length) alert(\"Win!\");\r\n        }\r\n    });\r\n\r\n    return enemy;\r\n}","\"use strict\";\r\n//var musicPlayer, speechPlayer, effectsPlayer;\r\n\r\nvar deleteMeAudio = { // TODO: replace\r\n    togglePlayers: function (player) {\r\n        var players;\r\n        player ? players = [player] : players = [musicPlayer, speechPlayer, effectsPlayer];\r\n        for (var i = 0; i < players.length; i++) {\r\n            players[i].muted = !players[i].muted;\r\n            settings[players[i].id] = settings[players[i].id] || {};\r\n            settings[players[i].id].muted = players[i].muted;\r\n        }\r\n    },\r\n    volumeDown: function (player) {\r\n        var players;\r\n        player ? players = [player] : players = [musicPlayer, speechPlayer, effectsPlayer];\r\n        for (var i = 0; i < players.length; i++) {\r\n            if (players[i].volume > 0)\r\n                players[i].volume = (Math.round((players[i].volume - 0.1) * 10) / 10); // JS math error fix\r\n            alert(\"Volume: \" + players[i].volume * 10);\r\n            settings[players[i].id] = settings[players[i].id] || {};\r\n            settings[players[i].id].volume = players[i].volume;\r\n            console.log(settings[players[i].id] + \" \" + players[i].id + \" \" + players[i].volume + \" \" + settings[players[i].id].volume);\r\n        }\r\n    },\r\n    volumeUp: function (player) {\r\n        var players;\r\n        player ? players = [player] : players = [musicPlayer, speechPlayer, effectsPlayer];\r\n        for (var i = 0; i < players.length; i++) {\r\n            if (players[i].volume < 1)\r\n                players[i].volume = (Math.round((players[i].volume + 0.1) * 10) / 10); // JS math error fix\r\n            alert(\"Volume: \" + players[i].volume * 10);\r\n            settings[players[i].id] = settings[players[i].id] || {};\r\n            settings[players[i].id].volume = players[i].volume;\r\n            console.log(settings[players[i].id] + \" \" + players[i].id + \" \" + players[i].volume + \" \" + settings[players[i].id].volume);\r\n        }\r\n    },\r\n    setVolume: function (volume, player) {\r\n        var players;\r\n        player ? players = [player] : players = [musicPlayer, speechPlayer, effectsPlayer];\r\n        for (var i = 0; i < players.length; i++) {\r\n            players[i].volume = volume;\r\n            alert(\"Volume set: \" + players[i].volume * 10);\r\n        }\r\n    },\r\n    nextTrack: function () {\r\n        var player = musicPlayer;\r\n        !player.paused ? player.pause() : player.play();\r\n    }\r\n};\r\n\r\n// A sound pool to use for the sound effects.\r\n// http://blog.sklambert.com/html5-canvas-game-html5-audio-and-finishing-touches/#adding-html-audio\r\nfunction SoundPool(filename, volume, maxSize) {\r\n    var pool = [];\r\n    this.pool = pool;\r\n    var currSound = 0;\r\n    var that = this;\r\n\r\n    // Populates the pool array with the given sound.\r\n    for (var i = 0; i < maxSize; i++) {\r\n        var sound = new Audio(filename);\r\n        sound.volume = volume;\r\n        pool[i] = sound;\r\n    }\r\n\r\n    this.setVolume = function setVolume(volume) {\r\n        for (var i = 0; i < that.pool.length; i++) {\r\n            that.pool[i].volume = volume;\r\n        }\r\n    };\r\n\r\n    this.mute = function mute(state) {\r\n        for (var i = 0; i < that.pool.length; i++) {\r\n            // State: toggle, true or false.\r\n            if (typeof state == \"undefined\")\r\n                that.pool[i].muted = !that.pool[i].muted;\r\n            else\r\n                that.pool[i].muted = state;\r\n        }\r\n    };\r\n\r\n    // Plays a sound.\r\n    this.play = function () {\r\n        if (pool[currSound].currentTime == 0 || pool[currSound].ended) {\r\n            pool[currSound].play();\r\n        }\r\n        currSound = (currSound + 1) % maxSize;\r\n    };\r\n}\r\n\r\n// Audio playlist. Takes an array of filenames.\r\nfunction Playlist(playlist, volume, random) {\r\n    var that = this;\r\n    var currentTrack = random ? getRandomInt(0, playlist.length - 1) : 0;\r\n    var player = new Audio();\r\n    player.volume = volume || 0.5;\r\n    player.src = playlist[currentTrack];\r\n\r\n    this.setVolume = function setVolume(volume) {\r\n        player.volume = volume;\r\n    };\r\n\r\n    this.mute = function mute(state) {\r\n        // State: toggle, true or false.\r\n        if (typeof state == \"undefined\")\r\n            player.muted = !player.muted;\r\n        else\r\n            player.muted = state;\r\n    };\r\n\r\n    this.play = function play() {\r\n        player.play();\r\n    };\r\n    this.pause = function pause() { player.pause(); };\r\n\r\n    // Next track.\r\n    this.next = function next() {\r\n        if (random)\r\n            currentTrack = getRandomInt(0, playlist.length - 1);\r\n        else\r\n            currentTrack = (currentTrack + 1) % playlist.length;\r\n        player.src = playlist[currentTrack];\r\n        //console.log(playlist[currentTrack]);\r\n        player.play();\r\n    };\r\n\r\n    this.isPlaying = function isPlaying() { return !player.paused; };\r\n\r\n    player.addEventListener(\"ended\", that.next);\r\n}","\"use strict\";\r\nvar ui = {\r\n    showHealth: function (ctx, entity) {\r\n        var width = ctx.canvas.width * entity.health / entity.maxHealth;\r\n        // Small bar on top of canvas.\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, ctx.canvas.width, 4);\r\n        ctx.fillStyle = \"red\";\r\n        ctx.fillRect(0, 1, width, 2);\r\n    }\r\n};\r\n\r\nfunction newGame() {\r\n    window.location.reload();\r\n}\r\n\r\nfunction continueGame() {\r\n    game = true;\r\n    render();\r\n    $('.menu').hide();\r\n}\r\n\r\nfunction pauseGame() {\r\n    game = false;\r\n    $('.menu').show();\r\n}\r\n\r\n// Hotkeys.\r\ndocument.addEventListener(\"keyup\", function hotkeys(event) {\r\n    // Get key by value\r\n    var key = Object.keys(KEYS).filter(function (key) {\r\n        return KEYS[key] === event.which;\r\n    })[0];\r\n\r\n    switch (key) {\r\n        case 'ESCAPE':\r\n        case 'PAUSE':\r\n            if (game)\r\n                pauseGame();\r\n            else\r\n                continueGame();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n","\"use strict\";\r\nvar KEYS = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, KEY_0: 48, KEY_1: 49, KEY_2: 50, KEY_3: 51, KEY_4: 52, KEY_5: 53, KEY_6: 54, KEY_7: 55, KEY_8: 56, KEY_9: 57, KEY_A: 65, KEY_B: 66, KEY_C: 67, KEY_D: 68, KEY_E: 69, KEY_F: 70, KEY_G: 71, KEY_H: 72, KEY_I: 73, KEY_J: 74, KEY_K: 75, KEY_L: 76, KEY_M: 77, KEY_N: 78, KEY_O: 79, KEY_P: 80, KEY_Q: 81, KEY_R: 82, KEY_S: 83, KEY_T: 84, KEY_U: 85, KEY_V: 86, KEY_W: 87, KEY_X: 88, KEY_Y: 89, KEY_Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 };\r\nvar keyDown = [];\r\nvar mousePosition = { x: 0, y: 0 };\r\nvar BUTTONS = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\nvar mouseDown = [];\r\nvar mouseDownCount = 0;\r\n\r\n// Keyboard state.\r\ndocument.addEventListener(\"keydown\", function (event) {\r\n    keyDown[event.which] = true;\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", function (event) {\r\n    keyDown[event.which] = false;\r\n});\r\n\r\n// Track mouse all the time.\r\ndocument.addEventListener('mousemove', function storeMouse(event) {\r\n    mousePosition = { x: event.clientX, y: event.clientY };\r\n});\r\n\r\ndocument.addEventListener('mousedown', function (event) {\r\n    mouseDown[event.button] = true;\r\n    ++mouseDownCount;\r\n    checkMouseButtons();\r\n});\r\n\r\ndocument.addEventListener('mouseup', function (event) {\r\n    mouseDown[event.button] = false;\r\n    --mouseDownCount;\r\n});\r\n\r\nfunction checkMouseButtons() {\r\n    if (mouseDownCount) {\r\n        // alright, let's lift the little bugger up!\r\n        for (var i = 0; i < mouseDown.length; ++i) {\r\n            if (mouseDown[i]) {\r\n                console.log(\"Button: \" + i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Array of keys to disable.\r\nfunction disableKeys(keys) {\r\n    document.addEventListener(\"keydown\", function disableKey(event) {\r\n        if (keys.indexOf(event.which) > -1) event.preventDefault();\r\n    });\r\n}\r\n\r\ndocument.addEventListener('contextmenu', function (event) {\r\n    //event.preventDefault();\r\n    //var target = event.target;\r\n    //alert(\"context: \" + target.id);\r\n});\r\n\r\nwindow.alert = function (message, type, duration) {\r\n    duration = duration || 1500;\r\n    // TODO\r\n    var elem = $('<div/>', {\r\n        'class': 'alert popup',\r\n        //title: 'Become a Googler',\r\n        text: message\r\n    }).appendTo('body');\r\n\r\n    elem.delay(duration).fadeOut(300);\r\n    setTimeout(function () {\r\n        elem.remove();\r\n    }, duration + 300);\r\n};\r\n\r\nfunction warn(message, duration) {}\r\n\r\nwindow.onerror = function errorHandler(errorMsg, url, lineNumber, column, errObj) {\r\n    console.log(errorMsg, lineNumber, column, errObj);\r\n    return alert(errorMsg, \"error\", 4000);\r\n};\r\n\r\n// Object.extend helper method.\r\nif (typeof Object.extend !== 'function') {\r\n    Object.extend = function (d, s) {\r\n        for (var k in s) {\r\n            if (s.hasOwnProperty(k)) {\r\n                var v = s[k];\r\n                if (d.hasOwnProperty(k) && typeof d[k] === \"object\" && typeof v === \"object\") {\r\n                    Object.extend(d[k], v);\r\n                } else {\r\n                    d[k] = v;\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    };\r\n}"]}